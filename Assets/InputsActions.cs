//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.5.1
//     from Assets/InputsActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputsActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputsActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputsActions"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""14bb221c-fc2c-453c-a021-ba41a8af4998"",
            ""actions"": [
                {
                    ""name"": ""ZoomValue"",
                    ""type"": ""Value"",
                    ""id"": ""83aed690-5381-4292-b67a-ca86e34ffb3a"",
                    ""expectedControlType"": ""Double"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ClickPosition"",
                    ""type"": ""Value"",
                    ""id"": ""8e6dfc17-5552-4d1a-91e1-c00b293162d2"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""DoubleClickPosition"",
                    ""type"": ""Button"",
                    ""id"": ""a0c3497e-bd7a-4c9a-b2bb-3a1a63f52f0a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""MultiTap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LongPressButton"",
                    ""type"": ""Button"",
                    ""id"": ""66145a7b-3fa2-4b91-9e79-b4a907eec7d3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PointerPosition"",
                    ""type"": ""PassThrough"",
                    ""id"": ""2dd3d8d3-9e5a-4b4c-9c31-d0c700a5134e"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""_PrimaryFingerPosition"",
                    ""type"": ""PassThrough"",
                    ""id"": ""3c5098d3-1cf3-43ad-89f3-e1c9ee06952d"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""_SecondaryFingerPosition"",
                    ""type"": ""PassThrough"",
                    ""id"": ""40211afd-9eb6-45b2-825c-a6fec1aa7eaa"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""_SecondaryFingerTouch"",
                    ""type"": ""Button"",
                    ""id"": ""2cb05899-99f0-42bc-b738-1ae2f8321f41"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""ca2c8752-ee04-487c-9175-4a90ce7891d2"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KBM"",
                    ""action"": ""ZoomValue"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""29380b4c-3771-4023-bd1f-f0cfaeb461f3"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Touchscreen"",
                    ""action"": ""ZoomValue"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cdd605dd-e4d8-4a36-8748-85c07065dc77"",
                    ""path"": ""<Touchscreen>/touch0/position"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": ""Touchscreen"",
                    ""action"": ""ClickPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9f0fd21f-3910-48e7-8dde-cdb18b4443be"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KBM"",
                    ""action"": ""ClickPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""14f6a610-98a3-4c82-89b2-bf8968f18374"",
                    ""path"": ""<Touchscreen>/touch0/press"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""Touchscreen"",
                    ""action"": ""LongPressButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""52b7bb6f-3a48-4991-b51d-c4d1185d0784"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KBM"",
                    ""action"": ""LongPressButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cdaa1520-2f43-42f2-a2aa-f4546638f452"",
                    ""path"": ""<Touchscreen>/touch0/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Touchscreen"",
                    ""action"": ""_PrimaryFingerPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b246b14c-e15d-4d0b-b7ae-5be58160f635"",
                    ""path"": ""<Touchscreen>/touch1/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Touchscreen"",
                    ""action"": ""_SecondaryFingerPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7e269523-5df9-4ab6-a2da-8b7738d1f8c7"",
                    ""path"": ""<Touchscreen>/touch0/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Touchscreen"",
                    ""action"": ""DoubleClickPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cdb8f697-2d3a-48e6-9027-a67084435114"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KBM"",
                    ""action"": ""DoubleClickPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cdf02d61-f0dd-4942-83b9-21ef3b317965"",
                    ""path"": ""<Touchscreen>/touch0/press"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""Touchscreen"",
                    ""action"": ""_SecondaryFingerTouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a8a5110a-e146-47b5-82cc-44641903de12"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KBM"",
                    ""action"": ""PointerPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8f4e9f8a-a647-427f-b6ec-5fe5896262c5"",
                    ""path"": ""<Touchscreen>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Touchscreen"",
                    ""action"": ""PointerPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""KBM"",
            ""bindingGroup"": ""KBM"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Touchscreen"",
            ""bindingGroup"": ""Touchscreen"",
            ""devices"": [
                {
                    ""devicePath"": ""<Touchscreen>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_ZoomValue = m_Player.FindAction("ZoomValue", throwIfNotFound: true);
        m_Player_ClickPosition = m_Player.FindAction("ClickPosition", throwIfNotFound: true);
        m_Player_DoubleClickPosition = m_Player.FindAction("DoubleClickPosition", throwIfNotFound: true);
        m_Player_LongPressButton = m_Player.FindAction("LongPressButton", throwIfNotFound: true);
        m_Player_PointerPosition = m_Player.FindAction("PointerPosition", throwIfNotFound: true);
        m_Player__PrimaryFingerPosition = m_Player.FindAction("_PrimaryFingerPosition", throwIfNotFound: true);
        m_Player__SecondaryFingerPosition = m_Player.FindAction("_SecondaryFingerPosition", throwIfNotFound: true);
        m_Player__SecondaryFingerTouch = m_Player.FindAction("_SecondaryFingerTouch", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_ZoomValue;
    private readonly InputAction m_Player_ClickPosition;
    private readonly InputAction m_Player_DoubleClickPosition;
    private readonly InputAction m_Player_LongPressButton;
    private readonly InputAction m_Player_PointerPosition;
    private readonly InputAction m_Player__PrimaryFingerPosition;
    private readonly InputAction m_Player__SecondaryFingerPosition;
    private readonly InputAction m_Player__SecondaryFingerTouch;
    public struct PlayerActions
    {
        private @InputsActions m_Wrapper;
        public PlayerActions(@InputsActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @ZoomValue => m_Wrapper.m_Player_ZoomValue;
        public InputAction @ClickPosition => m_Wrapper.m_Player_ClickPosition;
        public InputAction @DoubleClickPosition => m_Wrapper.m_Player_DoubleClickPosition;
        public InputAction @LongPressButton => m_Wrapper.m_Player_LongPressButton;
        public InputAction @PointerPosition => m_Wrapper.m_Player_PointerPosition;
        public InputAction @_PrimaryFingerPosition => m_Wrapper.m_Player__PrimaryFingerPosition;
        public InputAction @_SecondaryFingerPosition => m_Wrapper.m_Player__SecondaryFingerPosition;
        public InputAction @_SecondaryFingerTouch => m_Wrapper.m_Player__SecondaryFingerTouch;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @ZoomValue.started += instance.OnZoomValue;
            @ZoomValue.performed += instance.OnZoomValue;
            @ZoomValue.canceled += instance.OnZoomValue;
            @ClickPosition.started += instance.OnClickPosition;
            @ClickPosition.performed += instance.OnClickPosition;
            @ClickPosition.canceled += instance.OnClickPosition;
            @DoubleClickPosition.started += instance.OnDoubleClickPosition;
            @DoubleClickPosition.performed += instance.OnDoubleClickPosition;
            @DoubleClickPosition.canceled += instance.OnDoubleClickPosition;
            @LongPressButton.started += instance.OnLongPressButton;
            @LongPressButton.performed += instance.OnLongPressButton;
            @LongPressButton.canceled += instance.OnLongPressButton;
            @PointerPosition.started += instance.OnPointerPosition;
            @PointerPosition.performed += instance.OnPointerPosition;
            @PointerPosition.canceled += instance.OnPointerPosition;
            @_PrimaryFingerPosition.started += instance.On_PrimaryFingerPosition;
            @_PrimaryFingerPosition.performed += instance.On_PrimaryFingerPosition;
            @_PrimaryFingerPosition.canceled += instance.On_PrimaryFingerPosition;
            @_SecondaryFingerPosition.started += instance.On_SecondaryFingerPosition;
            @_SecondaryFingerPosition.performed += instance.On_SecondaryFingerPosition;
            @_SecondaryFingerPosition.canceled += instance.On_SecondaryFingerPosition;
            @_SecondaryFingerTouch.started += instance.On_SecondaryFingerTouch;
            @_SecondaryFingerTouch.performed += instance.On_SecondaryFingerTouch;
            @_SecondaryFingerTouch.canceled += instance.On_SecondaryFingerTouch;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @ZoomValue.started -= instance.OnZoomValue;
            @ZoomValue.performed -= instance.OnZoomValue;
            @ZoomValue.canceled -= instance.OnZoomValue;
            @ClickPosition.started -= instance.OnClickPosition;
            @ClickPosition.performed -= instance.OnClickPosition;
            @ClickPosition.canceled -= instance.OnClickPosition;
            @DoubleClickPosition.started -= instance.OnDoubleClickPosition;
            @DoubleClickPosition.performed -= instance.OnDoubleClickPosition;
            @DoubleClickPosition.canceled -= instance.OnDoubleClickPosition;
            @LongPressButton.started -= instance.OnLongPressButton;
            @LongPressButton.performed -= instance.OnLongPressButton;
            @LongPressButton.canceled -= instance.OnLongPressButton;
            @PointerPosition.started -= instance.OnPointerPosition;
            @PointerPosition.performed -= instance.OnPointerPosition;
            @PointerPosition.canceled -= instance.OnPointerPosition;
            @_PrimaryFingerPosition.started -= instance.On_PrimaryFingerPosition;
            @_PrimaryFingerPosition.performed -= instance.On_PrimaryFingerPosition;
            @_PrimaryFingerPosition.canceled -= instance.On_PrimaryFingerPosition;
            @_SecondaryFingerPosition.started -= instance.On_SecondaryFingerPosition;
            @_SecondaryFingerPosition.performed -= instance.On_SecondaryFingerPosition;
            @_SecondaryFingerPosition.canceled -= instance.On_SecondaryFingerPosition;
            @_SecondaryFingerTouch.started -= instance.On_SecondaryFingerTouch;
            @_SecondaryFingerTouch.performed -= instance.On_SecondaryFingerTouch;
            @_SecondaryFingerTouch.canceled -= instance.On_SecondaryFingerTouch;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);
    private int m_KBMSchemeIndex = -1;
    public InputControlScheme KBMScheme
    {
        get
        {
            if (m_KBMSchemeIndex == -1) m_KBMSchemeIndex = asset.FindControlSchemeIndex("KBM");
            return asset.controlSchemes[m_KBMSchemeIndex];
        }
    }
    private int m_TouchscreenSchemeIndex = -1;
    public InputControlScheme TouchscreenScheme
    {
        get
        {
            if (m_TouchscreenSchemeIndex == -1) m_TouchscreenSchemeIndex = asset.FindControlSchemeIndex("Touchscreen");
            return asset.controlSchemes[m_TouchscreenSchemeIndex];
        }
    }
    public interface IPlayerActions
    {
        void OnZoomValue(InputAction.CallbackContext context);
        void OnClickPosition(InputAction.CallbackContext context);
        void OnDoubleClickPosition(InputAction.CallbackContext context);
        void OnLongPressButton(InputAction.CallbackContext context);
        void OnPointerPosition(InputAction.CallbackContext context);
        void On_PrimaryFingerPosition(InputAction.CallbackContext context);
        void On_SecondaryFingerPosition(InputAction.CallbackContext context);
        void On_SecondaryFingerTouch(InputAction.CallbackContext context);
    }
}
